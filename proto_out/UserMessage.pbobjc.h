// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Info;
@class MsgChatContent;
@class MsgUser;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - UserMessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface UserMessageRoot : GPBRootObject
@end

#pragma mark - HeartbeatConnectReq_0

/**
 * 心跳消息，建议连接成功后，每隔15秒发送一次
 * 如果30秒内没收到心跳包返回，代表已经和服务器的链接已经断开
 **/
GPB_FINAL @interface HeartbeatConnectReq_0 : GPBMessage

@end

#pragma mark - HeartbeatConnectResp_0

typedef GPB_ENUM(HeartbeatConnectResp_0_FieldNumber) {
  HeartbeatConnectResp_0_FieldNumber_ServerTime = 1,
};

GPB_FINAL @interface HeartbeatConnectResp_0 : GPBMessage

/** 服务器时间戳 */
@property(nonatomic, readwrite) int64_t serverTime;

@end

#pragma mark - CloseClientResp_1

typedef GPB_ENUM(CloseClientResp_1_FieldNumber) {
  CloseClientResp_1_FieldNumber_Info = 1,
};

/**
 * 服务器强行关闭客户端连接，提示错误后可以不需要重连
 **/
GPB_FINAL @interface CloseClientResp_1 : GPBMessage

/** 关闭理由 */
@property(nonatomic, readwrite, strong, null_resettable) Info *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@end

#pragma mark - InfoResp_2

typedef GPB_ENUM(InfoResp_2_FieldNumber) {
  InfoResp_2_FieldNumber_Info = 1,
};

/**
 * 错误协议
 **/
GPB_FINAL @interface InfoResp_2 : GPBMessage

/** 信息提示 */
@property(nonatomic, readwrite, strong, null_resettable) Info *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@end

#pragma mark - LoginReq_1001

typedef GPB_ENUM(LoginReq_1001_FieldNumber) {
  LoginReq_1001_FieldNumber_Token = 1,
};

/**
 * 登录
 **/
GPB_FINAL @interface LoginReq_1001 : GPBMessage

/** 用户token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@end

#pragma mark - LoginResp_1001

typedef GPB_ENUM(LoginResp_1001_FieldNumber) {
  LoginResp_1001_FieldNumber_MsgUser = 1,
};

/**
 * 登陆成功后获得的数据
 **/
GPB_FINAL @interface LoginResp_1001 : GPBMessage

/** 用户数据 */
@property(nonatomic, readwrite, strong, null_resettable) MsgUser *msgUser;
/** Test to see if @c msgUser has been set. */
@property(nonatomic, readwrite) BOOL hasMsgUser;

@end

#pragma mark - SendChatReq_1002

typedef GPB_ENUM(SendChatReq_1002_FieldNumber) {
  SendChatReq_1002_FieldNumber_Content = 1,
  SendChatReq_1002_FieldNumber_GameId = 2,
};

/**
 * 客户端发送聊天信息
 **/
GPB_FINAL @interface SendChatReq_1002 : GPBMessage

/** 聊天内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 赛程id */
@property(nonatomic, readwrite) int64_t gameId;

@end

#pragma mark - SendChatResp_1002

typedef GPB_ENUM(SendChatResp_1002_FieldNumber) {
  SendChatResp_1002_FieldNumber_MsgChatContentArray = 1,
};

/**
 * 客户端显示聊天
 **/
GPB_FINAL @interface SendChatResp_1002 : GPBMessage

/** 聊天内容 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MsgChatContent*> *msgChatContentArray;
/** The number of items in @c msgChatContentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgChatContentArray_Count;

@end

#pragma mark - MsgUser

typedef GPB_ENUM(MsgUser_FieldNumber) {
  MsgUser_FieldNumber_Token = 1,
  MsgUser_FieldNumber_Name = 2,
  MsgUser_FieldNumber_Img = 3,
};

/**
 * 用户数据
 **/
GPB_FINAL @interface MsgUser : GPBMessage

/** ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *img;

@end

#pragma mark - MsgChatContent

typedef GPB_ENUM(MsgChatContent_FieldNumber) {
  MsgChatContent_FieldNumber_FromUserName = 1,
  MsgChatContent_FieldNumber_FromUserImg = 2,
  MsgChatContent_FieldNumber_FromTime = 3,
  MsgChatContent_FieldNumber_Content = 4,
  MsgChatContent_FieldNumber_GameId = 5,
};

/**
 * 聊天内容
 **/
GPB_FINAL @interface MsgChatContent : GPBMessage

/** 发送者名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromUserName;

/** 发送者头像地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromUserImg;

/** 发送时间 */
@property(nonatomic, readwrite) int64_t fromTime;

/** 聊天内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 赛程id */
@property(nonatomic, readwrite) int64_t gameId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
